ion-content {
    --background: #fff;
}

.back-font {
    position: absolute;
    top: -10%;
    left: -5%;
    z-index: -2;
    background-color: rgba($color: #c04326, $alpha: 1);
    width: 200px;
    height: 200px;
    border-radius: 50%;
}

.back-middle {
    z-index: -2;
    position: absolute;
    top: 10%;
    right: -74%;
    // opacity: .4;
}


form {
    margin-top: 100px;
    position: relative;
    
    .header {
        width: 100%;
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: space-between;
        margin-bottom: 40px;
        .box {
            width: 55px;
            height: 55px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: white;
            border-radius: .28rem;
            box-shadow: 0 10px 30px 0px  rgba(57,71,82,0.12);
            img {
                width: 40px;
                height: 40px;
            }
        }

        .title {
            span {
                font-weight: bold;
                font-size: 25px;
                color: #c04326;
            }
        }
        
    }

    .field {
        display: flex;
        flex-flow: column-reverse;
        margin-bottom: .6em;
        position: relative;
      }
      /**
      * Add a transition to the label and input.
      * I'm not even sure that touch-action: manipulation works on
      * inputs, but hey, it's new and cool and could remove the
      * pesky delay.
      */
      label, input, textarea {
        transition: all 0.2s;
        touch-action: manipulation;
      }
      
      input,textarea {
        font-size: 1em;
        border: 2px solid #4d4f52;
        border-radius: .30rem;
        -webkit-appearance: none;
        padding: 0;
        cursor: text;
        padding: .375rem .75rem;
      }
      
      input:focus , textarea:focus{
        outline: 0;
      }
      
      label {
        text-transform: capitalize;
        letter-spacing: 0.05em;
        font-size: 10px;
        color: #4d4f52;
        font-weight: bold;
      }
      /**
      * Translate down and scale the label up to cover the placeholder,
      * when following an input (with placeholder-shown support).
      * Also make sure the label is only on one row, at max 2/3rds of the
      * fieldâ€”to make sure it scales properly and doesn't wrap.
      */
      input:placeholder-shown + label , textarea:placeholder-shown + label{
        cursor: text;
        max-width: 66.66%;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        transform-origin: left bottom;
        transform: translate(.5rem, 2.4rem) scale(1.5);
      }
      /**
      * By default, the placeholder should be transparent. Also, it should
      * inherit the transition.
      */
      ::-webkit-input-placeholder {
        opacity: 0;
        transition: inherit;
      }
      
      textarea::-webkit-input-placeholder {
        opacity: 0;
        transition: inherit;
      }
      /**
      * Show the placeholder when the input is focused.
      */
      input:focus::-webkit-input-placeholder,textarea:focus::-webkit-input-placeholder {
        opacity: 1;
      }
      /**
      * When the element is focused, remove the label transform.
      * Also, do this when the placeholder is _not_ shown, i.e. when
      * there's something in the input at all.
      */
      input:not(:placeholder-shown) + label,
      textarea:not(:placeholder-shown) + label,
      textarea:focus + label,
      input:focus + label {
        transform: translate(0, 0) scale(1);
        cursor: pointer;
      }
}

